{"version":3,"sources":["components/NavBar.module.css","pages/Intro.module.css","components/NavBar.js","components/DropDownMenu.js","components/BackDrop.js","constants/gameStatus.js","store/counterSlice.js","constants/vocabulary.js","constants/vocabStatus.js","components/TypingArea.js","components/Result.js","pages/Home.js","pages/Intro.js","pages/NotFound.js","App.js","store/index.js","index.js"],"names":["module","exports","Hamburger","props","className","classes","hamburger","onClick","click","NavBar","header","to","logo","nav","activeClassName","active","clickDropDown","DropDownMenu","dropdownClasses","show","join","BackDrop","START","PROGRESS","OVER","initialState","timer","totalWords","correctWords","gameStatus","showResult","counterSlice","createSlice","name","reducers","tictok","state","resetTimer","incrementTotalWords","incrementCorrectWords","changeGameStatus","actions","console","log","payload","type","setTotalWords","amount","changeResultStatus","vocab","split","HIGHLIGHTED","useStyles","makeStyles","textField_Input","color","alignSelf","fontSize","margin","button","TypingArea","useState","input","setInput","currentWords","setCurrentWords","nextWords","setNextWords","currentIndex","setCurrentIndex","dispatch","useDispatch","useSelector","counter","materialStyles","useEffect","getNewWords","compareInput","highlightWord","newWords","i","randomWord","Math","floor","random","length","push","word","status","showWords","words","map","current","index","nextWord","newCurrentWords","trim","validateCurrentWord","style","substring","Grid","TextField","autoComplete","autoFocus","id","InputProps","onChange","event","target","value","onKeyPress","key","Button","variant","Result","document","body","addEventListener","keyRestart","removeEventListener","restartHandler","Home","interval","clearInterval","setInterval","Intro","intro","textDecoration","NotFound","App","backdrop","showDropDown","setShowDropDown","prevState","path","exact","store","configureStore","reducer","counterReducer","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.6f43a971.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBar_header__1wxDw\",\"logo\":\"NavBar_logo__2FY1p\",\"nav\":\"NavBar_nav__xAdj3\",\"active\":\"NavBar_active__hqGOc\",\"hamburger\":\"NavBar_hamburger__1geu8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Intro_intro__mrlq7\"};","import { NavLink } from 'react-router-dom';\nimport classes from \"./NavBar.module.css\";\n\n\nconst Hamburger = props => (\n  <button className={classes.hamburger} onClick={props.click}>\n    <div />\n    <div />\n    <div />\n  </button>\n);\n\nconst NavBar = (props) => {\n  return (\n    <header className={classes.header}>\n\n      <div >\n        <NavLink to='/' className={classes.logo}>MinimalTypist</NavLink>\n        {/* <a className={classes.logo} href={process.env.PUBLIC_URL}>Minimal Typing</a> */}\n      </div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/home' activeClassName={classes.active}>\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/tab1' activeClassName={classes.active}>\n              Tab1\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/tab2' activeClassName={classes.active}>\n              Tab2\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/tab3' activeClassName={classes.active}>\n              Tab3\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Hamburger click={props.clickDropDown} />\n    </header>\n  );\n}\n\nexport default NavBar;","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport \"./DropDownMenu.css\"\n\nconst DropDownMenu = (props) => {\n\n  let dropdownClasses = [\"dropdown\"]\n\n  if (props.show) {\n    dropdownClasses = [\"dropdown\", \"open\"]\n  }\n\n  return (\n    <nav className={dropdownClasses.join(\" \")}>\n      <ul>\n        <li>\n          <NavLink to='/home' className=\"link\"> Home </NavLink>\n        </li>\n        <li>\n          <NavLink to='/tab1' className=\"link\"> tab1 </NavLink>\n        </li>\n        <li>\n          <NavLink to='/tab2' className=\"link\"> tab2 </NavLink>\n        </li>\n        <li>\n          <NavLink to='/tab3' className=\"link\"> tab3 </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default DropDownMenu;\n","import React from \"react\";\nimport \"./BackDrop.css\";\n\nconst BackDrop = props => {\n  return (\n    <div className=\"backdrop\" onClick={props.click} />\n  );\n}\n\nexport default BackDrop;","export const START = \"start\";\nexport const PROGRESS = \"progress\";\nexport const OVER = \"over\";\n\nexport const TIME = 30;","import { createSlice } from '@reduxjs/toolkit'\nimport { TIME, START } from \"../constants/gameStatus\";\n\nconst initialState = {\n  timer: TIME,\n  totalWords: 0,\n  correctWords: 0,\n  gameStatus: START,\n  showResult: false\n}\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    tictok(state) {\n      state.timer--;\n    },\n    resetTimer(state) {\n      state.timer = TIME;\n    },\n    incrementTotalWords(state) {\n      state.totalWords++;\n    },\n    incrementCorrectWords(state) {\n      state.correctWords++;\n    },\n    changeGameStatus(state, actions) {\n      console.log(actions)\n      state.gameStatus = actions.payload.type;\n      console.log(\"Current Game Status\", state.gameStatus);\n    },\n    setTotalWords(state, actions) {\n      state.totalWords = actions.payload.amount;\n    },\n    changeResultStatus(state) {\n      state.showResult = !state.showResult;\n    }\n  },\n})\n\nexport const {\n  tictok,\n  incrementTotalWords,\n  incrementCorrectWords,\n  changeGameStatus,\n  resetTimer,\n  setTotalWords\n} = counterSlice.actions\n\nexport default counterSlice.reducer","const vocabString = \"at right above world sea help school their line near got of all kind does list letter come then own write to about him in stop here line cut form could what man be the young feet or will until picture well river sound white as write had three went took turn earth list own without and when new cut young men far so song home off left think up country only place him girl thing it’s keep often away we those or year but group or they not eye point again big few me leave while show along very got girl saw each eat over before family many look always boy night above close up mountain large around get only high more talk use such at read page is saw just father enough young kind day turn really song may put add but might something only its list begin find well big important near got far find your right very earth sea father where need because too word move might book use said letter about an can got were two mother man they before idea high we begin through form family go great even river place sentence us ask next use it hear water boy do men sea picture question when big while point around them not read being must call stop man before time next play him where her near talk to one to found quick end day good not above spell left begin or far must this turn might earth really light often make second around of for its water word try us took here us in each our out food could second being which may car can just mother seem cut that start light feet\"\n\nexport const vocab = vocabString.split(\" \");","export const NEW = \"new\";\nexport const HIGHLIGHTED = \"highlighted\";\nexport const HIGHLIGHTEDERROR = \"highlightedError\";\nexport const CORRECT = \"correct\";\nexport const WRONG = \"wrong\";\n\n","import React, { useEffect, useState } from 'react'\nimport { TextField, Button, Grid, makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeGameStatus, incrementTotalWords, incrementCorrectWords, resetTimer } from '../store/counterSlice';\nimport { vocab } from \"../constants/vocabulary\";\nimport { START, PROGRESS } from \"../constants/gameStatus\";\nimport { NEW, HIGHLIGHTED, HIGHLIGHTEDERROR, CORRECT, WRONG } from '../constants/vocabStatus';\nimport \"./TypingArea.css\";\n\nconst useStyles = makeStyles({\n  textField_Input: {\n    color: \"white\",\n    alignSelf: \"center\",\n    fontSize: 24,\n    margin: '30px 30px'\n  },\n  button: {\n\n  }\n})\n\nconst TypingArea = () => {\n  const [input, setInput] = useState(\"\"); // the current input on the screen\n  const [currentWords, setCurrentWords] = useState([]); // the first line of the words\n  const [nextWords, setNextWords] = useState([]); // the second line of the words\n  const [currentIndex, setCurrentIndex] = useState(0); // the current index pointing at the word in the first line\n\n  /**###############\n   *    Redux\n   ################*/\n  const dispatch = useDispatch();\n  const timer = useSelector((state) => state.counter.timer);\n  const gameStatus = useSelector((state) => state.counter.gameStatus);\n\n  const materialStyles = useStyles(); // material-ui styles \n\n  /**#########################\n   *          LifeCycle\n   ###########################*/\n  // componentdidmount\n  useEffect(() => {\n    setCurrentWords(getNewWords());\n    setNextWords(getNewWords());\n  }, [])\n\n  // check whether the current input === current word\n  // --> Change the hightlighting styles\n  useEffect(() => {\n    if (input && !compareInput()) {\n      highlightWord(HIGHLIGHTEDERROR);\n    } else {\n      highlightWord(HIGHLIGHTED);\n    }\n  }, [input])\n\n  // When current word is changed or new words are generated\n  useEffect(() => {\n    setCurrentIndex(currentIndex);\n  }, [currentWords, currentIndex]);\n\n  useEffect(() => {\n    highlightWord(HIGHLIGHTED);\n  }, [currentIndex, nextWords]);\n\n\n  /**##########################\n   *  Typing Helper Functions\n   ############################*/\n  const getNewWords = () => {\n    const newWords = []\n    for (let i = 0; i < 10; i++) {\n      const randomWord = vocab[Math.floor(Math.random() * vocab.length)];\n      newWords.push({\n        word: randomWord,\n        status: NEW\n      });\n    }\n    return newWords;\n  }\n\n  const showWords = (words) => {\n    return words.map((current, index) => {\n      const { word, status } = current;\n      return <span key={index} className={`word ${status}`}>{word}</span>;\n    });\n  }\n\n  const validateCurrentWord = () => {\n    const newCurrentWords = [...currentWords];\n    if (currentWords[currentIndex].word === input.trim()) {\n      newCurrentWords[currentIndex].status = CORRECT;\n      dispatch(incrementCorrectWords());\n    }\n    else {\n      newCurrentWords[currentIndex].status = WRONG;\n    }\n    setCurrentWords(newCurrentWords);\n  };\n\n  const nextWord = () => {\n    validateCurrentWord();\n    if (currentIndex === currentWords.length - 1) {\n      setCurrentIndex(0);\n      setCurrentWords(nextWords); // update the current line on with the next one\n      setNextWords(getNewWords()); // create a new line\n    } else {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const highlightWord = (style) => {\n    const newCurrentWords = [...currentWords];\n    if (newCurrentWords.length) {\n      newCurrentWords[currentIndex].status = style;\n      setCurrentWords(newCurrentWords);\n    }\n  }\n\n  const compareInput = () => {\n    const currWord = currentWords[currentIndex].word;\n    return currWord.substring(0, input.length) === input;\n  };\n\n  /**#########################\n   *      Action Handlers\n   ###########################*/\n  const inputUpdateHandler = (event) => {\n    setInput(event.target.value.trim());\n  }\n\n  const keyPressHandler = (event) => {\n    if (gameStatus === START) {\n      dispatch(changeGameStatus({ type: PROGRESS }))\n    }\n    // make sure the input is not blanks\n    if (event.key === \" \" && input.trim().length) {\n      nextWord();\n      dispatch(incrementTotalWords());\n      setInput(\"\");\n    }\n  }\n\n  return (\n    <div>\n      <h1>{timer}</h1>\n      <div>\n        <Grid>{showWords(currentWords)}</Grid>\n        <Grid>{showWords(nextWords)}</Grid>\n      </div>\n      <div className=\"typing\">\n        <TextField\n          autoComplete=\"off\"\n          autoFocus\n          id=\"filled-basic\"\n          // error={!!input && !compareInput()}\n          InputProps={{ className: materialStyles.textField_Input }}\n          onChange={inputUpdateHandler}\n          onKeyPress={keyPressHandler}\n          value={input}\n        >\n        </TextField>\n      </div>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => {\n        dispatch(resetTimer())\n        setCurrentWords(getNewWords());\n        setNextWords(getNewWords());\n        dispatch(changeGameStatus({ type: START }));\n      }}>Refresh</Button>\n    </div>\n  );\n}\n\nexport default TypingArea;","import React, { useEffect } from 'react'\nimport { Button } from '@material-ui/core';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeGameStatus, resetTimer, setTotalWords } from '../store/counterSlice';\nimport { TIME } from '../constants/gameStatus';\n\nconst Result = () => {\n\n  const dispatch = useDispatch();\n  const totalWords = useSelector((state) => state.counter.totalWords);\n  const correctWords = useSelector((state) => state.counter.correctWords);\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', keyRestart);\n\n    return () => document.body.removeEventListener(\"keydown\", keyRestart);\n  }, [])\n\n  const restartHandler = () => {\n    dispatch(resetTimer());\n    dispatch(changeGameStatus({ type: \"start\" }));\n    dispatch(setTotalWords({ amount: 0 }));\n  }\n\n  const keyRestart = (event) => {\n    if (event.key === \" \") {\n      restartHandler()\n    }\n  }\n\n  return (\n    <div>\n      <h1 className=\"centered\">Result</h1>\n      <h2 className=\"centered\">{`Speed: ${Math.floor(totalWords / (TIME / 60))} WPM`}</h2>\n      <h2 className=\"centered\">{`Accurary: ${Math.floor(100 * correctWords / totalWords)}%`}</h2>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={restartHandler}\n      >\n        Restart\n      </Button>\n    </div>\n  );\n}\n\nexport default Result;","import React, { useState, useEffect } from 'react'\nimport TypingArea from '../components/TypingArea';\nimport Result from \"../components/Result\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { tictok, changeGameStatus } from '../store/counterSlice';\nimport { PROGRESS, OVER } from \"../constants/gameStatus\";\nimport \"./Home.css\"\n\n\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const timer = useSelector((state) => state.counter.timer);\n  const gameStatus = useSelector((state) => state.counter.gameStatus);\n\n  useEffect(() => {\n    document.body.className = \"body\";\n  }, [])\n\n  useEffect(() => {\n    console.log(\"home useEffect\")\n    let interval = null;\n    if (gameStatus === OVER) clearInterval(interval);\n    else if (timer <= 0) dispatch(changeGameStatus({ type: OVER }));\n    else if (gameStatus === PROGRESS) {\n      interval = setInterval(() => {\n        dispatch(tictok());\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [timer, gameStatus]);\n\n  return (\n    <div className=\"centered\">\n      {gameStatus !== OVER && <TypingArea />}\n      {gameStatus === OVER && <Result />}\n    </div>\n  );\n};\n\nexport default Home;\n\n","// import classes from \"./Intro.module.css\"\nimport React, { useEffect } from 'react'\nimport classes from \"./Intro.module.css\"\nimport { Button } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\n\nconst Intro = () => {\n  useEffect(() => {\n    document.body.className = \"intro-body\";\n  }, [])\n\n  return (\n    <div className={`${classes.intro} centered`}>\n      <h1>Welcome to MinimalTypist</h1>\n      <h3>Enjoy the minimalistic typing environment</h3>\n      <Button\n        variant=\"contained\"\n        color=\"inherit\"\n      >\n        <NavLink to=\"/home\" style={{\n          textDecoration: \"none\",\n          color: \"#000000\"\n        }}\n        >\n          Start Typing\n        </NavLink>\n      </Button>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React, { useEffect } from 'react'\n\nconst NotFound = () => {\n  useEffect(() => {\n    document.body.className = \"body\";\n  }, [])\n  return (\n    <div>\n      <h1 className=\"centered\">Result are not found...</h1>\n    </div>\n  );\n};\n\nexport default NotFound;","import React, { useState } from \"react\";\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport NavBar from \"./components/NavBar\"\nimport DropDownMenu from \"./components/DropDownMenu\";\nimport BackDrop from \"./components/BackDrop\";\nimport Home from \"./pages/Home\";\nimport Intro from \"./pages/Intro\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  const [showDropDown, setShowDropDown] = useState(false);\n\n  const clickDropDownHandler = () => {\n    setShowDropDown((prevState) => !prevState)\n  }\n\n  const backDropHandler = () => {\n    setShowDropDown(false)\n  }\n\n  let backdrop;\n\n  if (showDropDown) {\n    backdrop = <BackDrop click={backDropHandler}/>\n  }\n\n  return (\n    <div>\n      <NavBar clickDropDown={clickDropDownHandler}/>\n      <DropDownMenu show={showDropDown}/>\n      {backdrop}\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <Intro />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counterSlice';\n\nconst store = configureStore({\n  reducer: { counter: counterReducer},\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport store from \"./store/index\"\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}